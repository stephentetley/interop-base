

namespace TestAppendable {


    // @test
    // def test01(): Bool \ IO = 
    //     use Result.flatMap;
    //     let step = () -> 
    //         region r1 {
    //             let sb = StringBuilder.new(r1);
    //             forM (_ <- Interop/Lang/Appendable.appendCharSequence!(Interop/Flix/WrappedRegion.wrapStringWithRegion(r1, "Hello world"), sb);
    //                   Interop/Lang/Appendable.appendChar!('!', sb))
    //             yield (StringBuilder.toString(sb) == "Hello world!")
    //         };
    //     step() |> Result.getWithDefault(false)



}